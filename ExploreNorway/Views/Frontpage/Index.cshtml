@using WAF.Engine.Query.TripsToNorwayDemo
@model FrontPage
@inject WAFNativeContext wafContext
@{
    Layout = "~/Views/Shared/Layouts/_TwoColumnSplitLayout.cshtml";

    var GMModel = GoogleMapsHelper.GetGoogleMapsModel(wafContext);
    bool googleMapsShouldInit = GMModel != null;

}
@section head{
    @{
        var q = wafContext.Session.CreateQuery();
                q.From<Location>();
                q.Select<Location>();
                q.Where(AqlLocation.SiteId == wafContext.Session.SiteId);
                List<Location> locations = q.Execute<Location>();
    }
        <meta name="viewport" content="initial-scale=1.0, user-scalable=no" />
        <script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?sensor=false"></script>
        <script type="text/javascript">
            function initializeGoogleMaps() {
                var latlng = new google.maps.LatLng(@GMModel.Latitude,@GMModel.Longitude);
                var myOptions = {
                    zoom: @GMModel.Zoom,
                    center: latlng,
                    panControl: false,
                    zoomControl: @GMModel.ZoomControl.ToString().ToLower(),
                    mapTypeControl: false,
                    scaleControl: false,
                    streetViewControl: false,
                    overviewMapControl: false,
                    mapTypeId: google.maps.MapTypeId.ROADMAP
                };
            var map = new google.maps.Map(document.getElementById("map_canvas"), myOptions);

            @foreach (Location location in locations)
            {
                if(!string.IsNullOrEmpty(location.Latitude) && !string.IsNullOrEmpty(location.Longitude))
                {
                    <text>
                            var myLatlng@(location.NodeId) = new google.maps.LatLng(@location.Latitude, @location.Longitude);
                            var marker@(location.NodeId) = new google.maps.Marker({
                            position: myLatlng@(location.NodeId),
                            map: map,
                            url: '@wafContext.GetUrl(location.NodeId)',
                            title: "@Html.Raw(location.Name)"
                            });
                            google.maps.event.addListener(marker@(location.NodeId), 'click', function()
                            {
                            window.location.href = marker@(location.NodeId).url;
                            });
                    </text>
                }
            }


            }

        </script>
}

<h1>@Model.MainHeading</h1>
@Html.Raw(Model.AboutSite)

<div class="video-box">
    @if (Model.Video.IsVideo())
    {
               
        <video width="100%" height="auto" autoplay muted playsinline loop>
            <source src="@Model.Video.GetUrl()" type="audio/mp4" />
        </video>
    }
   
</div>
<div class="text-box-with-background">
    @Html.Raw(Model.IntroductionText)
</div>
@{
    var modules = Model.Modules.Get();
}


    @Html.DisplayFor(model => modules)



@section sideRow{

    <h2>Follow us</h2>
    <ul id="followus">
        <li class="twitter">
            <a rel="nofollow external" title="twitter" href="http://www.twitter.com/relatude" target="_blank">Twitter</a>
        </li>
        <li class="youtube">
            <a rel="nofollow external" title="YouTube" href="https://www.youtube.com/@@relatudecmse-commerce8553" target="_blank">YouTube</a>
        </li>    
    </ul>
    

    <h2>Where do you want to go today?</h2>
    <div id="frontpageMap">
        <div id="map_canvas"></div>
    </div>






    @{
        var selectedAttractions = Model.SelectedAttractions.Get();
    }
    @if (selectedAttractions.Count > 0)
    {

        <div id="tag-cloud-container">
            <h2>Most popular attractions</h2>
            @foreach (var attraction in selectedAttractions)
            {
                <a href="@wafContext.GetUrl(attraction)">@attraction.Name</a><text>,&nbsp;</text>
            }
        </div>
    }


    <div id="selected-articles-container">

        @{
            var selectedArticles = Model.SelectedArticles.Get();
            var counter = 1;
        }
        @foreach (var article in selectedArticles) {
            var isRightArticle = counter % 2 == 0;


            <div class="small-text-box">
                <h4><a href="@wafContext.GetUrl(article)">@article.Name</a></h4>
                <p>@Helper.GetArticleIngressClip(article) <a href="@wafContext.GetUrl(article)">More</a></p>
            </div>


            counter++;
        }

    </div>

    @{
        var cp = Helper.GetInstance(wafContext).ControlPanel;
    }
    @if (cp.VacantPositionsFolder.IsSet()) {


        var vacantPositions = cp.VacantPositionsFolder.Get().Children.Get();

        if (vacantPositions.Count > 0) {

            <div class="small-text-box">
                <h2>Vacant positions</h2>
                <div>
                    <ul>
                        @foreach (var pos in vacantPositions) {
                            <li><a href="@wafContext.GetUrl(pos)">@pos.Name</a></li>
                        }
                    </ul>
                </div>
            </div>
        }
    }


}

@section scripts{

    <script type="text/javascript">
        @if (googleMapsShouldInit)
        {
            <text>
            $(document).ready(function () {
                initializeGoogleMaps();
            });
            </text>
        }
    </script>
}